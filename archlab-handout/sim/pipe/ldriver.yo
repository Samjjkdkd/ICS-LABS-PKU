                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f62806000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71804000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 谢昱辉2200017753
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # 优化选择：
                            | # 1）在hcl文件中实现了加载传送，使得加载/使用冒险不再影响程序运行
                            | # 2）选择10x1循环展开，提高程序在处理长数组时的运行效率。
                            | # 3）对于小于10的部分，使用三叉树的结构，最大程度地优化运行。
                            | # 4）在hcl中实现了iaddq指令，简化了程序中的部分指令。
                            | 	# Loop header
0x032: c0f2f6ffffffffffffff |     iaddq $-10,%rdx 
0x03c: 720602000000000000   |     jl ROOT
                            | 
0x045:                      | L1: 
0x045: 50870000000000000000 |     mrmovq (%rdi), %r8
0x04f: 40860000000000000000 |     rmmovq %r8,(%rsi)
0x059: 6288                 |     andq %r8, %r8
0x05b: 716e00000000000000   |     jle L2
0x064: c0f00100000000000000 |     iaddq $1,%rax    
0x06e:                      | L2: 
0x06e: 50870800000000000000 |     mrmovq 8(%rdi),%r8
0x078: 40860800000000000000 |     rmmovq %r8,8(%rsi)
0x082: 6288                 |     andq %r8,%r8
0x084: 719700000000000000   |     jle L3
0x08d: c0f00100000000000000 |     iaddq $1,%rax
0x097:                      | L3:
0x097: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x0a1: 40861000000000000000 |     rmmovq %r8,16(%rsi)
0x0ab: 6288                 |     andq %r8, %r8
0x0ad: 71c000000000000000   |     jle L4
0x0b6: c0f00100000000000000 |     iaddq $1, %rax      
0x0c0:                      | L4:
0x0c0: 50871800000000000000 |     mrmovq 24(%rdi), %r8
0x0ca: 40861800000000000000 |     rmmovq %r8,24(%rsi)
0x0d4: 6288                 |     andq %r8,%r8
0x0d6: 71e900000000000000   |     jle L5
0x0df: c0f00100000000000000 |     iaddq $1,%rax
0x0e9:                      | L5:
0x0e9: 50872000000000000000 |     mrmovq 32(%rdi), %r8
0x0f3: 40862000000000000000 |     rmmovq %r8,32(%rsi)
0x0fd: 6288                 |     andq %r8, %r8
0x0ff: 711201000000000000   |     jle L6
0x108: c0f00100000000000000 |     iaddq $1, %rax      
0x112:                      | L6:
0x112: 50872800000000000000 |     mrmovq 40(%rdi), %r8
0x11c: 40862800000000000000 |     rmmovq %r8,40(%rsi)
0x126: 6288                 |     andq %r8,%r8
0x128: 713b01000000000000   |     jle L7
0x131: c0f00100000000000000 |     iaddq $1,%rax 
0x13b:                      | L7:
0x13b: 50873000000000000000 |     mrmovq 48(%rdi), %r8
0x145: 40863000000000000000 |     rmmovq %r8,48(%rsi)
0x14f: 6288                 |     andq %r8, %r8
0x151: 716401000000000000   |     jle L8
0x15a: c0f00100000000000000 |     iaddq $1, %rax      
0x164:                      | L8:
0x164: 50873800000000000000 |     mrmovq 56(%rdi), %r8
0x16e: 40863800000000000000 |     rmmovq %r8,56(%rsi)
0x178: 6288                 |     andq %r8,%r8
0x17a: 718d01000000000000   |     jle L9
0x183: c0f00100000000000000 |     iaddq $1,%rax 
0x18d:                      | L9:
0x18d: 50874000000000000000 |     mrmovq 64(%rdi), %r8
0x197: 40864000000000000000 |     rmmovq %r8,64(%rsi)
0x1a1: 6288                 |     andq %r8, %r8
0x1a3: 71b601000000000000   |     jle L10
0x1ac: c0f00100000000000000 |     iaddq $1, %rax        
0x1b6:                      | L10:
0x1b6: 50874800000000000000 |     mrmovq 72(%rdi), %r8
0x1c0: 40864800000000000000 |     rmmovq %r8,72(%rsi)
0x1ca: 6288                 |     andq %r8,%r8
0x1cc: 71df01000000000000   |     jle L11
0x1d5: c0f00100000000000000 |     iaddq $1,%rax
0x1df:                      | L11:
0x1df: c0f75000000000000000 |     iaddq $80,%rdi
0x1e9: c0f65000000000000000 |     iaddq $80,%rsi
0x1f3: c0f2f6ffffffffffffff |     iaddq $-10,%rdx
0x1fd: 754500000000000000   |     jge L1
                            | 
0x206:                      | ROOT:
0x206: c0f20700000000000000 |     iaddq $7,%rdx
0x210: 722b02000000000000   |     jl  LEFT3        # <3
0x219: 765202000000000000   |     jg  RIGHT3       # >3
0x222: 739c03000000000000   |     je  LEAF3        # =3
                            | 
0x22b:                      | LEFT3:
0x22b: c0f20200000000000000 |     iaddq $2,%rdx       # len == 1
0x235: 73ee03000000000000   |     je  LEAF1
0x23e: c0f2ffffffffffffffff |     iaddq $-1,%rdx      # len == 2
0x248: 73c503000000000000   |     je  LEAF2
0x251: 90                   |     ret                 # len == 0 
                            | 
0x252:                      | RIGHT3:
0x252: c0f2fdffffffffffffff |     iaddq $-3,%rdx
0x25c: 768a02000000000000   |     jg  RIGHT6
0x265: 732103000000000000   |     je  LEAF6           # len == 6
0x26e: c0f20100000000000000 |     iaddq $1,%rdx 
0x278: 727303000000000000   |     jl  LEAF4           # len == 4
0x281: 734a03000000000000   |     je  LEAF5           # len == 5  
                            |       
0x28a:                      | RIGHT6:
0x28a: c0f2feffffffffffffff |     iaddq $-2,%rdx
0x294: 72f802000000000000   |     jl  LEAF7           # len == 7
0x29d: 73cf02000000000000   |     je  LEAF8           # len == 8
                            | 
0x2a6:                      | LEAF9:
0x2a6: 50874000000000000000 |     mrmovq 64(%rdi), %r8
0x2b0: 40864000000000000000 |     rmmovq %r8, 64(%rsi)
0x2ba: 6288                 |     andq %r8, %r8
0x2bc: 71cf02000000000000   |     jle LEAF8    
0x2c5: c0f00100000000000000 |     iaddq $1, %rax        
                            | 
0x2cf:                      | LEAF8:
0x2cf: 50873800000000000000 |     mrmovq 56(%rdi), %r8   
0x2d9: 40863800000000000000 |     rmmovq %r8, 56(%rsi)
0x2e3: 6288                 |     andq %r8, %r8
0x2e5: 71f802000000000000   |     jle LEAF7   
0x2ee: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x2f8:                      | LEAF7:
0x2f8: 50873000000000000000 |     mrmovq 48(%rdi), %r8
0x302: 40863000000000000000 |     rmmovq %r8, 48(%rsi)
0x30c: 6288                 |     andq %r8, %r8
0x30e: 712103000000000000   |     jle LEAF6  
0x317: c0f00100000000000000 |     iaddq $1, %rax   
                            | 
0x321:                      | LEAF6:
0x321: 50872800000000000000 |     mrmovq 40(%rdi), %r8
0x32b: 40862800000000000000 |     rmmovq %r8, 40(%rsi)
0x335: 6288                 |     andq %r8, %r8
0x337: 714a03000000000000   |     jle LEAF5
0x340: c0f00100000000000000 |     iaddq $1, %rax     
                            | 
0x34a:                      | LEAF5:
0x34a: 50872000000000000000 |     mrmovq 32(%rdi), %r8
0x354: 40862000000000000000 |     rmmovq %r8, 32(%rsi)
0x35e: 6288                 |     andq %r8, %r8
0x360: 717303000000000000   |     jle LEAF4  
0x369: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x373:                      | LEAF4:
0x373: 50871800000000000000 |     mrmovq 24(%rdi), %r8
0x37d: 40861800000000000000 |     rmmovq %r8, 24(%rsi)
0x387: 6288                 |     andq %r8, %r8
0x389: 719c03000000000000   |     jle LEAF3 
0x392: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x39c:                      | LEAF3:
0x39c: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x3a6: 40861000000000000000 |     rmmovq %r8, 16(%rsi)
0x3b0: 6288                 |     andq %r8, %r8
0x3b2: 71c503000000000000   |     jle LEAF2   
0x3bb: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x3c5:                      | LEAF2:
0x3c5: 50870800000000000000 |     mrmovq 8(%rdi), %r8
0x3cf: 40860800000000000000 |     rmmovq %r8, 8(%rsi)
0x3d9: 6288                 |     andq %r8, %r8 
0x3db: 71ee03000000000000   |     jle LEAF1  
0x3e4: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x3ee:                      | LEAF1:
0x3ee: 50870000000000000000 |     mrmovq (%rdi), %r8
0x3f8: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x402: 6288                 |     andq %r8, %r8
0x404: 711704000000000000   |     jle Done 
0x40d: c0f00100000000000000 |     iaddq $1, %rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x417:                      | Done:
0x417: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x418:                      | End:
                            | #/* $end ncopy-ys */
0x418:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x418:                      | 	.align 8
0x418:                      | src:
0x418: 0100000000000000     | 	.quad 1
0x420: feffffffffffffff     | 	.quad -2
0x428: 0300000000000000     | 	.quad 3
0x430: 0400000000000000     | 	.quad 4
0x438: fbffffffffffffff     | 	.quad -5
0x440: faffffffffffffff     | 	.quad -6
0x448: 0700000000000000     | 	.quad 7
0x450: 0800000000000000     | 	.quad 8
0x458: f7ffffffffffffff     | 	.quad -9
0x460: 0a00000000000000     | 	.quad 10
0x468: f5ffffffffffffff     | 	.quad -11
0x470: 0c00000000000000     | 	.quad 12
0x478: 0d00000000000000     | 	.quad 13
0x480: f2ffffffffffffff     | 	.quad -14
0x488: f1ffffffffffffff     | 	.quad -15
0x490: 1000000000000000     | 	.quad 16
0x498: efffffffffffffff     | 	.quad -17
0x4a0: eeffffffffffffff     | 	.quad -18
0x4a8: 1300000000000000     | 	.quad 19
0x4b0: ecffffffffffffff     | 	.quad -20
0x4b8: 1500000000000000     | 	.quad 21
0x4c0: eaffffffffffffff     | 	.quad -22
0x4c8: e9ffffffffffffff     | 	.quad -23
0x4d0: e8ffffffffffffff     | 	.quad -24
0x4d8: 1900000000000000     | 	.quad 25
0x4e0: e6ffffffffffffff     | 	.quad -26
0x4e8: 1b00000000000000     | 	.quad 27
0x4f0: 1c00000000000000     | 	.quad 28
0x4f8: e3ffffffffffffff     | 	.quad -29
0x500: e2ffffffffffffff     | 	.quad -30
0x508: 1f00000000000000     | 	.quad 31
0x510: 2000000000000000     | 	.quad 32
0x518: 2100000000000000     | 	.quad 33
0x520: deffffffffffffff     | 	.quad -34
0x528: ddffffffffffffff     | 	.quad -35
0x530: 2400000000000000     | 	.quad 36
0x538: dbffffffffffffff     | 	.quad -37
0x540: daffffffffffffff     | 	.quad -38
0x548: 2700000000000000     | 	.quad 39
0x550: d8ffffffffffffff     | 	.quad -40
0x558: d7ffffffffffffff     | 	.quad -41
0x560: d6ffffffffffffff     | 	.quad -42
0x568: 2b00000000000000     | 	.quad 43
0x570: 2c00000000000000     | 	.quad 44
0x578: 2d00000000000000     | 	.quad 45
0x580: 2e00000000000000     | 	.quad 46
0x588: 2f00000000000000     | 	.quad 47
0x590: d0ffffffffffffff     | 	.quad -48
0x598: 3100000000000000     | 	.quad 49
0x5a0: ceffffffffffffff     | 	.quad -50
0x5a8: 3300000000000000     | 	.quad 51
0x5b0: ccffffffffffffff     | 	.quad -52
0x5b8: 3500000000000000     | 	.quad 53
0x5c0: 3600000000000000     | 	.quad 54
0x5c8: c9ffffffffffffff     | 	.quad -55
0x5d0: c8ffffffffffffff     | 	.quad -56
0x5d8: c7ffffffffffffff     | 	.quad -57
0x5e0: c6ffffffffffffff     | 	.quad -58
0x5e8: c5ffffffffffffff     | 	.quad -59
0x5f0: c4ffffffffffffff     | 	.quad -60
0x5f8: 3d00000000000000     | 	.quad 61
0x600: 3e00000000000000     | 	.quad 62
0x608: 3f00000000000000     | 	.quad 63
0x610: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x620:                      | 	.align 16
0x620:                      | Predest:
0x620: fadebc0000000000     | 	.quad 0xbcdefa
0x628:                      | dest:
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0: abefcd0000000000     | 	.quad 0xcdefab
0x7b8: abefcd0000000000     | 	.quad 0xcdefab
0x7c0: abefcd0000000000     | 	.quad 0xcdefab
0x7c8: abefcd0000000000     | 	.quad 0xcdefab
0x7d0: abefcd0000000000     | 	.quad 0xcdefab
0x7d8: abefcd0000000000     | 	.quad 0xcdefab
0x7e0: abefcd0000000000     | 	.quad 0xcdefab
0x7e8: abefcd0000000000     | 	.quad 0xcdefab
0x7f0: abefcd0000000000     | 	.quad 0xcdefab
0x7f8: abefcd0000000000     | 	.quad 0xcdefab
0x800: abefcd0000000000     | 	.quad 0xcdefab
0x808: abefcd0000000000     | 	.quad 0xcdefab
0x810: abefcd0000000000     | 	.quad 0xcdefab
0x818: abefcd0000000000     | 	.quad 0xcdefab
0x820:                      | Postdest:
0x820: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x828:                      | .align 8
                            | # Run time stack
0x828: 0000000000000000     | 	.quad 0
0x830: 0000000000000000     | 	.quad 0
0x838: 0000000000000000     | 	.quad 0
0x840: 0000000000000000     | 	.quad 0
0x848: 0000000000000000     | 	.quad 0
0x850: 0000000000000000     | 	.quad 0
0x858: 0000000000000000     | 	.quad 0
0x860: 0000000000000000     | 	.quad 0
0x868: 0000000000000000     | 	.quad 0
0x870: 0000000000000000     | 	.quad 0
0x878: 0000000000000000     | 	.quad 0
0x880: 0000000000000000     | 	.quad 0
0x888: 0000000000000000     | 	.quad 0
0x890: 0000000000000000     | 	.quad 0
0x898: 0000000000000000     | 	.quad 0
0x8a0: 0000000000000000     | 	.quad 0
                            | 
0x8a8:                      | Stack:
